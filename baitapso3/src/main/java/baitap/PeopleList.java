/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package baitap;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PeopleList extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PeopleList\",\"namespace\":\"baitap\",\"fields\":[{\"name\":\"maso\",\"type\":\"int\"},{\"name\":\"ten\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Person\",\"fields\":[{\"name\":\"FirstName\",\"type\":\"string\"},{\"name\":\"LastName\",\"type\":\"string\"}]}}},{\"name\":\"diachi\",\"type\":\"string\"},{\"name\":\"sodienthoai\",\"type\":\"long\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"phuongtien\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int maso;
  @Deprecated public java.util.List<baitap.Person> ten;
  @Deprecated public java.lang.CharSequence diachi;
  @Deprecated public long sodienthoai;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public java.lang.CharSequence phuongtien;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PeopleList() {}

  /**
   * All-args constructor.
   */
  public PeopleList(java.lang.Integer maso, java.util.List<baitap.Person> ten, java.lang.CharSequence diachi, java.lang.Long sodienthoai, java.lang.CharSequence email, java.lang.CharSequence phuongtien) {
    this.maso = maso;
    this.ten = ten;
    this.diachi = diachi;
    this.sodienthoai = sodienthoai;
    this.email = email;
    this.phuongtien = phuongtien;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return maso;
    case 1: return ten;
    case 2: return diachi;
    case 3: return sodienthoai;
    case 4: return email;
    case 5: return phuongtien;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: maso = (java.lang.Integer)value$; break;
    case 1: ten = (java.util.List<baitap.Person>)value$; break;
    case 2: diachi = (java.lang.CharSequence)value$; break;
    case 3: sodienthoai = (java.lang.Long)value$; break;
    case 4: email = (java.lang.CharSequence)value$; break;
    case 5: phuongtien = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'maso' field.
   */
  public java.lang.Integer getMaso() {
    return maso;
  }

  /**
   * Sets the value of the 'maso' field.
   * @param value the value to set.
   */
  public void setMaso(java.lang.Integer value) {
    this.maso = value;
  }

  /**
   * Gets the value of the 'ten' field.
   */
  public java.util.List<baitap.Person> getTen() {
    return ten;
  }

  /**
   * Sets the value of the 'ten' field.
   * @param value the value to set.
   */
  public void setTen(java.util.List<baitap.Person> value) {
    this.ten = value;
  }

  /**
   * Gets the value of the 'diachi' field.
   */
  public java.lang.CharSequence getDiachi() {
    return diachi;
  }

  /**
   * Sets the value of the 'diachi' field.
   * @param value the value to set.
   */
  public void setDiachi(java.lang.CharSequence value) {
    this.diachi = value;
  }

  /**
   * Gets the value of the 'sodienthoai' field.
   */
  public java.lang.Long getSodienthoai() {
    return sodienthoai;
  }

  /**
   * Sets the value of the 'sodienthoai' field.
   * @param value the value to set.
   */
  public void setSodienthoai(java.lang.Long value) {
    this.sodienthoai = value;
  }

  /**
   * Gets the value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'phuongtien' field.
   */
  public java.lang.CharSequence getPhuongtien() {
    return phuongtien;
  }

  /**
   * Sets the value of the 'phuongtien' field.
   * @param value the value to set.
   */
  public void setPhuongtien(java.lang.CharSequence value) {
    this.phuongtien = value;
  }

  /** Creates a new PeopleList RecordBuilder */
  public static baitap.PeopleList.Builder newBuilder() {
    return new baitap.PeopleList.Builder();
  }
  
  /** Creates a new PeopleList RecordBuilder by copying an existing Builder */
  public static baitap.PeopleList.Builder newBuilder(baitap.PeopleList.Builder other) {
    return new baitap.PeopleList.Builder(other);
  }
  
  /** Creates a new PeopleList RecordBuilder by copying an existing PeopleList instance */
  public static baitap.PeopleList.Builder newBuilder(baitap.PeopleList other) {
    return new baitap.PeopleList.Builder(other);
  }
  
  /**
   * RecordBuilder for PeopleList instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PeopleList>
    implements org.apache.avro.data.RecordBuilder<PeopleList> {

    private int maso;
    private java.util.List<baitap.Person> ten;
    private java.lang.CharSequence diachi;
    private long sodienthoai;
    private java.lang.CharSequence email;
    private java.lang.CharSequence phuongtien;

    /** Creates a new Builder */
    private Builder() {
      super(baitap.PeopleList.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(baitap.PeopleList.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.maso)) {
        this.maso = data().deepCopy(fields()[0].schema(), other.maso);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ten)) {
        this.ten = data().deepCopy(fields()[1].schema(), other.ten);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.diachi)) {
        this.diachi = data().deepCopy(fields()[2].schema(), other.diachi);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sodienthoai)) {
        this.sodienthoai = data().deepCopy(fields()[3].schema(), other.sodienthoai);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phuongtien)) {
        this.phuongtien = data().deepCopy(fields()[5].schema(), other.phuongtien);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PeopleList instance */
    private Builder(baitap.PeopleList other) {
            super(baitap.PeopleList.SCHEMA$);
      if (isValidValue(fields()[0], other.maso)) {
        this.maso = data().deepCopy(fields()[0].schema(), other.maso);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ten)) {
        this.ten = data().deepCopy(fields()[1].schema(), other.ten);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.diachi)) {
        this.diachi = data().deepCopy(fields()[2].schema(), other.diachi);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sodienthoai)) {
        this.sodienthoai = data().deepCopy(fields()[3].schema(), other.sodienthoai);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.email)) {
        this.email = data().deepCopy(fields()[4].schema(), other.email);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phuongtien)) {
        this.phuongtien = data().deepCopy(fields()[5].schema(), other.phuongtien);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'maso' field */
    public java.lang.Integer getMaso() {
      return maso;
    }
    
    /** Sets the value of the 'maso' field */
    public baitap.PeopleList.Builder setMaso(int value) {
      validate(fields()[0], value);
      this.maso = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'maso' field has been set */
    public boolean hasMaso() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'maso' field */
    public baitap.PeopleList.Builder clearMaso() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'ten' field */
    public java.util.List<baitap.Person> getTen() {
      return ten;
    }
    
    /** Sets the value of the 'ten' field */
    public baitap.PeopleList.Builder setTen(java.util.List<baitap.Person> value) {
      validate(fields()[1], value);
      this.ten = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'ten' field has been set */
    public boolean hasTen() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'ten' field */
    public baitap.PeopleList.Builder clearTen() {
      ten = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'diachi' field */
    public java.lang.CharSequence getDiachi() {
      return diachi;
    }
    
    /** Sets the value of the 'diachi' field */
    public baitap.PeopleList.Builder setDiachi(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.diachi = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'diachi' field has been set */
    public boolean hasDiachi() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'diachi' field */
    public baitap.PeopleList.Builder clearDiachi() {
      diachi = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'sodienthoai' field */
    public java.lang.Long getSodienthoai() {
      return sodienthoai;
    }
    
    /** Sets the value of the 'sodienthoai' field */
    public baitap.PeopleList.Builder setSodienthoai(long value) {
      validate(fields()[3], value);
      this.sodienthoai = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'sodienthoai' field has been set */
    public boolean hasSodienthoai() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'sodienthoai' field */
    public baitap.PeopleList.Builder clearSodienthoai() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'email' field */
    public java.lang.CharSequence getEmail() {
      return email;
    }
    
    /** Sets the value of the 'email' field */
    public baitap.PeopleList.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.email = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'email' field has been set */
    public boolean hasEmail() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'email' field */
    public baitap.PeopleList.Builder clearEmail() {
      email = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'phuongtien' field */
    public java.lang.CharSequence getPhuongtien() {
      return phuongtien;
    }
    
    /** Sets the value of the 'phuongtien' field */
    public baitap.PeopleList.Builder setPhuongtien(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.phuongtien = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'phuongtien' field has been set */
    public boolean hasPhuongtien() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'phuongtien' field */
    public baitap.PeopleList.Builder clearPhuongtien() {
      phuongtien = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public PeopleList build() {
      try {
        PeopleList record = new PeopleList();
        record.maso = fieldSetFlags()[0] ? this.maso : (java.lang.Integer) defaultValue(fields()[0]);
        record.ten = fieldSetFlags()[1] ? this.ten : (java.util.List<baitap.Person>) defaultValue(fields()[1]);
        record.diachi = fieldSetFlags()[2] ? this.diachi : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.sodienthoai = fieldSetFlags()[3] ? this.sodienthoai : (java.lang.Long) defaultValue(fields()[3]);
        record.email = fieldSetFlags()[4] ? this.email : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.phuongtien = fieldSetFlags()[5] ? this.phuongtien : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
